Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest\r\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    package=\"com.example.humspots\">\r\n\r\n    <!--\r\n         The ACCESS_COARSE/FINE_LOCATION permissions are not required to use\r\n         Google Maps Android API v2, but you must specify either coarse or fine\r\n         location permissions for the 'MyLocation' functionality.\r\n    -->\r\n    <uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\" />\r\n    <!--\r\n         The ACCESS_COARSE/FINE_LOCATION permissions are not required to use\r\n         Google Maps Android API v2, but you must specify either coarse or fine\r\n         location permissions for the 'MyLocation' functionality.\r\n    -->\r\n    <permission\r\n        android:name=\"android.permission.ACCESS_FINE_LOCATION\"\r\n        android:protectionLevel=\"dangerous\" />\r\n    <permission\r\n        android:name=\"android.permission.ACCESS_COARSE_LOCATION\"\r\n        android:protectionLevel=\"dangerous\" />\r\n\r\n    <uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" />\r\n    <uses-permission android:name=\"com.example.mapdemo.permission.MAPS_RECEIVE\" />\r\n    <uses-permission android:name=\"android.permission.INTERNET\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_COARSE_LOCATION\" />\r\n\r\n    <uses-feature\r\n        android:glEsVersion=\"0x00020000\"\r\n        android:required=\"true\" />\r\n\r\n    <application\r\n        android:name=\".ParseApplication\"\r\n        android:allowBackup=\"true\"\r\n        android:icon=\"@drawable/appicon\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@drawable/appicon\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/AppTheme\"\r\n        tools:ignore=\"GoogleAppIndexingWarning\"\r\n        tools:replace=\"android:name\">\r\n        <activity android:name=\".LoginPage\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n        <!--\r\n             The API key for Google Maps-based APIs is defined as a string resource.\r\n             (See the file \"res/values/google_maps_api.xml\").\r\n             Note that the API key is linked to the encryption key used to sign the APK.\r\n             You need a different API key for each encryption key, including the release key that is used to\r\n             sign the APK for publishing.\r\n             You can define the keys for the debug and release targets in src/debug/ and src/release/.\r\n        -->\r\n        <meta-data\r\n            android:name=\"com.google.android.geo.API_KEY\"\r\n            android:value=\"@string/google_maps_key\" />\r\n\r\n        <!--<activity android:name=\".LoginActivity\" />-->\r\n        <activity android:name=\".MainActivity\">\r\n\r\n        </activity>\r\n        <activity android:name=\".DetailActivity\" />\r\n        <activity android:name=\".TrailDetails\" />\r\n        <activity android:name=\".CreateNewUserActivity\" />\r\n\r\n        <meta-data\r\n            android:name=\"com.google.android.gms.version\"\r\n            android:value=\"@integer/google_play_services_version\" />\r\n        <meta-data\r\n            android:name=\"preloaded_fonts\"\r\n            android:resource=\"@array/preloaded_fonts\" />\r\n        <!--<meta-data\r\n            android:name=\"com.google.android.maps.v2.API_KEY\"\r\n            android:value=\"AIzaSyDllkOvwuCEnI2pET-h8LSvB95SiT2_RLE\" />-->\r\n    </application>\r\n\r\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/AndroidManifest.xml	(revision 4052bf0c63ec5e55c31976cd6c210c8235fc66c4)
+++ app/src/main/AndroidManifest.xml	(date 1607465606913)
@@ -65,7 +65,6 @@
         </activity>
         <activity android:name=".DetailActivity" />
         <activity android:name=".TrailDetails" />
-        <activity android:name=".CreateNewUserActivity" />
 
         <meta-data
             android:name="com.google.android.gms.version"
Index: app/src/main/java/com/example/humspots/DetailActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.humspots;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.fragment.app.FragmentManager;\r\n\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.bumptech.glide.Glide;\r\nimport com.codepath.asynchttpclient.AsyncHttpClient;\r\nimport com.codepath.asynchttpclient.callback.JsonHttpResponseHandler;\r\nimport com.example.humspots.fragments.MapFragment;\r\nimport com.example.humspots.models.EventModel;\r\nimport com.example.humspots.models.Venue;\r\n\r\nimport org.json.JSONArray;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\nimport org.parceler.Parcels;\r\n\r\n\r\nimport javax.net.ssl.HttpsURLConnection;\r\nimport com.google.gson.Gson;\r\nimport com.google.gson.GsonBuilder;\r\nimport com.google.gson.JsonObject;\r\nimport com.google.gson.JsonParser;\r\n\r\nimport java.io.IOException;\r\nimport java.io.InputStream;\r\nimport java.io.UnsupportedEncodingException;\r\nimport java.net.MalformedURLException;\r\nimport java.net.URL;\r\nimport java.net.URLEncoder;\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\nimport java.util.Scanner;\r\n\r\nimport okhttp3.Headers;\r\n\r\npublic class DetailActivity extends AppCompatActivity {\r\n\r\n    public static final String TAG = \"DetailActivity\";\r\n\r\n    List<Venue> venue;\r\n    String results;\r\n    String venLongitude;\r\n    String venLatitude;\r\n    String venName;\r\n\r\n    static String subscriptionKey = \"ArW0CmIBq00h3BNC79eevgIXL_HuNwBXpb2Z1E_xd_9w7kPioxAt9UQRusd5zZVn\";\r\n    static String host = \"https://api.cognitive.microsoft.com\";\r\n    static String path = \"/bing/v7.0/images/search\";\r\n\r\n    ImageView ivImage;\r\n    ImageView ivMapTest;\r\n    TextView tvDay;\r\n    TextView tvMonth;\r\n    TextView tvTitle;\r\n    TextView tvLinks;\r\n    TextView tvDescription;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_detail);\r\n\r\n        ivImage = findViewById(R.id.ivImage);\r\n        ivMapTest = findViewById(R.id.ivMapTest);\r\n        tvDay = findViewById(R.id.tvDay);\r\n        tvMonth = findViewById(R.id.tvMonth);\r\n        tvTitle = findViewById(R.id.tvTitle);\r\n        tvLinks = findViewById(R.id.tvLinks);\r\n        tvDescription = findViewById(R.id.tvDescription);\r\n\r\n        /*final EventModel event = Parcels.unwrap(getIntent().getParcelableExtra(\"event\"));\r\n\r\n        Glide.with(this).load(event.getPosterURL()).into(ivImage);*/\r\n        Bundle bundle = getIntent().getExtras();\r\n\r\n        String day = bundle.getString(\"Date\").substring(5,7);\r\n        String month = bundle.getString(\"Date\").substring(0,3);\r\n\r\n        String extraInfo = (bundle.getString(\"ExtraInfo\") == \"\" ||\r\n                bundle.getString(\"ExtraInfo\") == \" \"||\r\n                bundle.getString(\"ExtraInfo\") == null ||\r\n                bundle.getString(\"ExtraInfo\").isEmpty()) ? \"\" : \"\\nContact Info:\\n\" + bundle.getString(\"ExtraInfo\");\r\n\r\n        tvDay.setText(day);\r\n        tvMonth.setText(month);\r\n        tvTitle.setText(bundle.getString(\"Title\"));\r\n        tvDescription.setText(bundle.getString(\"Description\"));\r\n        tvLinks.setText(bundle.getString(\"PostURL\") + \"\\n\" + extraInfo);\r\n\r\n        /*\r\n        // construct the search request URL (in the form of endpoint + query string)\r\n        URL url = null;\r\n        try {\r\n            url = new URL(host + path + \"?q=\" +  URLEncoder.encode(bundle.getString(\"Venue\"), \"UTF-8\"));\r\n        } catch (MalformedURLException e) {\r\n            e.printStackTrace();\r\n        } catch (UnsupportedEncodingException e) {\r\n            e.printStackTrace();\r\n        }\r\n        HttpsURLConnection connection = null;\r\n        try {\r\n            connection = (HttpsURLConnection)url.openConnection();\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n        connection.setRequestProperty(\"Ocp-Apim-Subscription-Key\", subscriptionKey);\r\n\r\n        // receive JSON body\r\n        InputStream stream = null;\r\n        try {\r\n            stream = connection.getInputStream();\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n        String response = new Scanner(stream).useDelimiter(\"\\\\A\").next();\r\n        // construct result object for return\r\n        SearchResponse results = new SearchResults(new HashMap<String, String>(), response);\r\n        */\r\n\r\n\r\n        /*ivMapTest.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Toast.makeText(getBaseContext(), \"Map loading..\", Toast.LENGTH_SHORT).show();\r\n\r\n                Bundle bundle = new Bundle();\r\n                bundle.putString(\"lat\", venLatitude);\r\n                bundle.putString(\"long\", venLongitude);\r\n                bundle.putString(\"name\", venName);\r\n\r\n                // set Fragment Arguments\r\n                Fragment fragment = new MapFragment();\r\n                FragmentManager fragmentManager = getSupportFragmentManager();\r\n                fragment.setArguments(bundle);\r\n                fragmentManager.beginTransaction().replace(R.id.eFrame, fragment).commit();\r\n            }\r\n        });*/\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/humspots/DetailActivity.java	(revision 4052bf0c63ec5e55c31976cd6c210c8235fc66c4)
+++ app/src/main/java/com/example/humspots/DetailActivity.java	(date 1607464848636)
@@ -15,7 +15,7 @@
 import com.codepath.asynchttpclient.AsyncHttpClient;
 import com.codepath.asynchttpclient.callback.JsonHttpResponseHandler;
 import com.example.humspots.fragments.MapFragment;
-import com.example.humspots.models.EventModel;
+//import com.example.humspots.models.EventModel;
 import com.example.humspots.models.Venue;
 
 import org.json.JSONArray;
Index: app/src/main/java/com/example/humspots/CreateNewUserActivity.java
===================================================================
--- app/src/main/java/com/example/humspots/CreateNewUserActivity.java	(revision 4052bf0c63ec5e55c31976cd6c210c8235fc66c4)
+++ app/src/main/java/com/example/humspots/CreateNewUserActivity.java	(revision 4052bf0c63ec5e55c31976cd6c210c8235fc66c4)
@@ -1,13 +0,0 @@
-package com.example.humspots;
-
-import android.os.Bundle;
-
-import androidx.appcompat.app.AppCompatActivity;
-
-public class CreateNewUserActivity extends AppCompatActivity {
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.activity_login);
-    }
-}
Index: app/src/main/java/com/example/humspots/fragments/TrailsFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.humspots.fragments;\r\n\r\nimport android.os.Bundle;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport android.provider.ContactsContract;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\n\r\nimport com.codepath.asynchttpclient.AsyncHttpClient;\r\nimport com.codepath.asynchttpclient.callback.JsonHttpResponseHandler;\r\nimport com.example.humspots.R;\r\nimport com.example.humspots.adapters.TrailsAdapter;\r\nimport com.example.humspots.models.Trail;\r\n\r\nimport org.json.JSONArray;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.BitSet;\r\nimport java.util.Collections;\r\nimport java.util.List;\r\n\r\nimport okhttp3.Headers;\r\n\r\nimport static com.parse.Parse.getApplicationContext;\r\n\r\n/**\r\n * A simple {@link Fragment} subclass.\r\n */\r\npublic class TrailsFragment extends Fragment {\r\n\r\n    public static final String TEST_URL = \"https://maps.googleapis.com/maps/api/place/textsearch/json?query=Trails+in+Humboldt&key=AIzaSyB2SbC24Cm4_D1Dl8qooOLLckDtBa362bM\";\r\n    public static final String TAG = \"TrailsActivity\";\r\n\r\n    List<Trail> trails;\r\n\r\n    public TrailsFragment() {\r\n        // Required empty public constructor\r\n    }\r\n\r\n    // The onCreateView method is called when Fragment should create its View object hierarchy,\r\n    // either dynamically or via XML layout inflation.\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        // Inflate the layout for this fragment\r\n        return inflater.inflate(R.layout.fragment_trails, container, false);\r\n    }\r\n\r\n    // This event is triggered soon after onCreateView().\r\n    // Any view setup should occur here.  E.g., view lookups and attaching view listeners.\r\n    @Override\r\n    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {\r\n        super.onViewCreated(view, savedInstanceState);\r\n\r\n        RecyclerView rvEvents = view.findViewById(R.id.rvTrails);\r\n\r\n        trails = new ArrayList<>();\r\n\r\n        //create the adapter\r\n        final TrailsAdapter trailsAdapter = new TrailsAdapter(getContext(), trails);\r\n\r\n        //set the adapter on the recycler view\r\n        rvEvents.setAdapter(trailsAdapter);\r\n\r\n        //set a layout manager on RV\r\n        rvEvents.setLayoutManager(new LinearLayoutManager(getContext()));\r\n\r\n        AsyncHttpClient client = new AsyncHttpClient();\r\n\r\n        //JSON Request\r\n        client.get(TEST_URL, new JsonHttpResponseHandler() {\r\n            @Override\r\n            public void onSuccess(int statusCode, Headers headers, JSON json) {\r\n                Log.d(TAG, \"onSuccess\");\r\n                JSONObject outerMost = json.jsonObject;\r\n\r\n                try {\r\n                    //array of trail objects\r\n                    JSONArray trail_arr = outerMost.getJSONArray(\"results\");\r\n                    Log.i(TAG, \"hi:\" + trail_arr.toString());\r\n                    trails.addAll(Trail.fromJsonArray(trail_arr));\r\n                    trailsAdapter.notifyDataSetChanged();\r\n                    Log.i(TAG, \"Trails: \" + trails.size());\r\n                } catch (JSONException e) {\r\n                    Log.e(TAG, \"hit json exception\", e);\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onFailure(int statusCode, Headers headers, String response, Throwable throwable) {\r\n                Log.d(TAG, \"onFailure\");\r\n            }\r\n        });\r\n\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/humspots/fragments/TrailsFragment.java	(revision 4052bf0c63ec5e55c31976cd6c210c8235fc66c4)
+++ app/src/main/java/com/example/humspots/fragments/TrailsFragment.java	(date 1606936418544)
@@ -39,7 +39,8 @@
  */
 public class TrailsFragment extends Fragment {
 
-    public static final String TEST_URL = "https://maps.googleapis.com/maps/api/place/textsearch/json?query=Trails+in+Humboldt&key=AIzaSyB2SbC24Cm4_D1Dl8qooOLLckDtBa362bM";
+    //public static final String TEST_URL = "https://maps.googleapis.com/maps/api/place/textsearch/json?query=Trails+in+Humboldt&key=AIzaSyB2SbC24Cm4_D1Dl8qooOLLckDtBa362bM";
+    public static final String TEST_URL = "https://maps.googleapis.com/maps/api/place/textsearch/json?query=Trails+in+Humboldt&key=AIzaSyBaBdfVTrR03AxYbbGipw7cMv39L3uaezA";
     public static final String TAG = "TrailsActivity";
 
     List<Trail> trails;
